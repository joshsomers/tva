// ------------------------------------
// Centre a block element
// ------------------------------------
@mixin push--auto {
	margin: { 
		left: auto;
		right: auto;
	}
}

// ------------------------------------
// Placeholder Mixin - Just add a color rule
// ------------------------------------
@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

// ------------------------------------
// Psuedo includes for :before and :after
// ------------------------------------
@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

// ------------------------------------
// Create a Triangle
// ------------------------------------
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5 );
		} @else if $direction == up {
			border-left: $size solid transparent;
			border-right: $size solid transparent;
			border-bottom: $size solid $color;
			margin-bottom: 0 - round( $size / 2.5 );
			} @else if $direction == right {
				border-top: $size solid transparent;
				border-bottom: $size solid transparent;
				border-left: $size solid $color;
				margin-right: -$size;
				} @else if  $direction == left {
					border-top: $size solid transparent;
					border-bottom: $size solid transparent;
					border-right: $size solid $color;
					margin-left: -$size;
				}
			}
			
// Clearfix
@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Shader
@mixin overlay($colour,$opacity) {
	&:before{
		content:'';
		background-color: rgba($colour,$opacity);
		display: block;
		height:100%;
		width:100%;
		position: absolute;
		left: 0;
		top: 0;
	}
}

// V Align
@mixin v-align {
	position:absolute;
	top:50%;
	transform:translateY(-50%);
}
@mixin ion($code){
	font-family:'Ionicons';
	content:$code;
}

// Center <img>
@mixin center-img {
	min-width:100%;
	min-height:100%;
	position: absolute;
	max-width:none;
	left:50%;
	top:50%;
	transform:translate(-50%,-50%);
}